module Api::V1::Accounts::Integrations::Deepseek::Hooks::Openai
  class ProcessEventController < ApplicationController
    skip_before_action :authenticate_user!
    skip_before_action :verify_authenticity_token

    DEEPSEEK_API_URL = 'https://api.deepseek.com/v1'.freeze

    def create
      begin
        Rails.logger.info("==== DEEPSEEK CONTROLLER CALLED ====")
        Rails.logger.info("Params: #{params.inspect}")

        client = Faraday.new(
          url: DEEPSEEK_API_URL,
          headers: {
            'Content-Type' => 'application/json',
            'Authorization' => "Bearer #{ENV['DEEPSEEK_API_KEY']}"
          }
        )
module Api::V1::Accounts::Integrations::Deepseek::Hooks::Openai
  class ProcessEventController < ApplicationController
    # Remove all skip_before_action lines
    
    def create
      begin
        Rails.logger.info("DeepSeek process_event called with params: #{params.inspect}")
        
        # Simple response without actually calling DeepSeek API yet
        render json: { 
          status: 'success',
          content: "This is a test reply suggestion generated by DeepSeek integration."
        }
      rescue StandardError => e
        Rails.logger.error("DeepSeek controller error: #{e.message}")
        render json: { error: e.message }, status: 500
      end
    end
  end
end
        response = client.post('/chat/completions') do |req|
          req.body = {
            model: 'deepseek-chat',
            messages: [
              { role: 'user', content: params[:content] }
            ],
            temperature: 0.7
          }.to_json
        end

        if response.success?
          render json: JSON.parse(response.body)
        else
          render json: { error: "Deepseek API error: #{response.status}" }, status: response.status
        end
      rescue StandardError => e
        Rails.logger.error("DEEPSEEK ERROR: #{e.message}")
        Rails.logger.error("#{e.backtrace.join("\n")}")
        render json: { error: e.message }, status: 500
      end
    end
  end
end
